name: Android CI

on:
  push:
    branches: [ main ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-deps
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: gradle-builds-${{ github.sha }}
      - name: Build with Gradle
        run: |
          bash ./gradlew assembleRelease
          bash ./gradlew assembleDebug
      - name: Sign Release APK
        if: success()
        id: sign_release
        uses: r0adkll/sign-android-release@v1.0.4
        env:
          BUILD_TOOLS_VERSION: "31.0.0"
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Sign Debug APK
        if: success()
        id: sign_debug
        uses: r0adkll/sign-android-release@v1.0.4
        env:
          BUILD_TOOLS_VERSION: "31.0.0"
        with:
          releaseDirectory: app/build/outputs/apk/debug
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Upload Release APK
        uses: actions/upload-artifact@v2
        with:
          name: MiuiHome_release
          path: ${{ steps.sign_release.outputs.signedReleaseFile }}
      - name: Upload Debug APK
        uses: actions/upload-artifact@v2
        with:
          name: MiuiHome_debug
          path: ${{ steps.sign_debug.outputs.signedReleaseFile }}
      - name: Post to channel
        if: contains(github.event.head_commit.message, '[skip post]') == false
        env:
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          RELEASE: ${{ steps.sign_release.outputs.signedReleaseFile }}
          DEBUG: ${{ steps.sign_debug.outputs.signedReleaseFile }}
          COMMIT_MESSAGE: |+
            New push in Github\!
            ```
            ${{ github.event.head_commit.message }}
            ```
        run: |
          ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`
          curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Frelease%22%7D%2C%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Fdebug%22%2C%22parse_mode%22%3A%22MarkdownV2%22%2C%22caption%22%3A${ESCAPED}%7D%5D" -F release="@$RELEASE" -F debug="@$DEBUG"
